// protoc --go_out=. --go_opt=paths=source_relative messages.proto

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v6.32.1
// source: messages.proto

package producer

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AggregatedRecord struct {
	state                        protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_PartitionKeyTable []string               `protobuf:"bytes,1,rep,name=partition_key_table,json=partitionKeyTable"`
	xxx_hidden_Records           *[]*Record             `protobuf:"bytes,3,rep,name=records"`
	unknownFields                protoimpl.UnknownFields
	sizeCache                    protoimpl.SizeCache
}

func (x *AggregatedRecord) Reset() {
	*x = AggregatedRecord{}
	mi := &file_messages_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AggregatedRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregatedRecord) ProtoMessage() {}

func (x *AggregatedRecord) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *AggregatedRecord) GetPartitionKeyTable() []string {
	if x != nil {
		return x.xxx_hidden_PartitionKeyTable
	}
	return nil
}

func (x *AggregatedRecord) GetRecords() []*Record {
	if x != nil {
		if x.xxx_hidden_Records != nil {
			return *x.xxx_hidden_Records
		}
	}
	return nil
}

func (x *AggregatedRecord) SetPartitionKeyTable(v []string) {
	x.xxx_hidden_PartitionKeyTable = v
}

func (x *AggregatedRecord) SetRecords(v []*Record) {
	x.xxx_hidden_Records = &v
}

type AggregatedRecord_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	PartitionKeyTable []string
	Records           []*Record
}

func (b0 AggregatedRecord_builder) Build() *AggregatedRecord {
	m0 := &AggregatedRecord{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_PartitionKeyTable = b.PartitionKeyTable
	x.xxx_hidden_Records = &b.Records
	return m0
}

type Record struct {
	state                        protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_PartitionKeyIndex uint64                 `protobuf:"varint,1,req,name=partition_key_index,json=partitionKeyIndex"`
	xxx_hidden_Data              []byte                 `protobuf:"bytes,3,req,name=data"`
	XXX_raceDetectHookData       protoimpl.RaceDetectHookData
	XXX_presence                 [1]uint32
	unknownFields                protoimpl.UnknownFields
	sizeCache                    protoimpl.SizeCache
}

func (x *Record) Reset() {
	*x = Record{}
	mi := &file_messages_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Record) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Record) ProtoMessage() {}

func (x *Record) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Record) GetPartitionKeyIndex() uint64 {
	if x != nil {
		return x.xxx_hidden_PartitionKeyIndex
	}
	return 0
}

func (x *Record) GetData() []byte {
	if x != nil {
		return x.xxx_hidden_Data
	}
	return nil
}

func (x *Record) SetPartitionKeyIndex(v uint64) {
	x.xxx_hidden_PartitionKeyIndex = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *Record) SetData(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_Data = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *Record) HasPartitionKeyIndex() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Record) HasData() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Record) ClearPartitionKeyIndex() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_PartitionKeyIndex = 0
}

func (x *Record) ClearData() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Data = nil
}

type Record_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	PartitionKeyIndex *uint64
	Data              []byte
}

func (b0 Record_builder) Build() *Record {
	m0 := &Record{}
	b, x := &b0, m0
	_, _ = b, x
	if b.PartitionKeyIndex != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_PartitionKeyIndex = *b.PartitionKeyIndex
	}
	if b.Data != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Data = b.Data
	}
	return m0
}

var File_messages_proto protoreflect.FileDescriptor

const file_messages_proto_rawDesc = "" +
	"\n" +
	"\x0emessages.proto\x12\bproducer\"n\n" +
	"\x10AggregatedRecord\x12.\n" +
	"\x13partition_key_table\x18\x01 \x03(\tR\x11partitionKeyTable\x12*\n" +
	"\arecords\x18\x03 \x03(\v2\x10.producer.RecordR\arecords\"Z\n" +
	"\x06Record\x125\n" +
	"\x13partition_key_index\x18\x01 \x01(\x04B\x05\xaa\x01\x02\b\x03R\x11partitionKeyIndex\x12\x19\n" +
	"\x04data\x18\x03 \x01(\fB\x05\xaa\x01\x02\b\x03R\x04dataB\fZ\n" +
	"./producerb\beditionsp\xe9\a"

var file_messages_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_messages_proto_goTypes = []any{
	(*AggregatedRecord)(nil), // 0: producer.AggregatedRecord
	(*Record)(nil),           // 1: producer.Record
}
var file_messages_proto_depIdxs = []int32{
	1, // 0: producer.AggregatedRecord.records:type_name -> producer.Record
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_messages_proto_init() }
func file_messages_proto_init() {
	if File_messages_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_messages_proto_rawDesc), len(file_messages_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_messages_proto_goTypes,
		DependencyIndexes: file_messages_proto_depIdxs,
		MessageInfos:      file_messages_proto_msgTypes,
	}.Build()
	File_messages_proto = out.File
	file_messages_proto_goTypes = nil
	file_messages_proto_depIdxs = nil
}
